# Scenario Name 
scenario: "BBINstorage2hourly"

# Temporal Parameters 
startYear: 2023
endYear: 2050
daytype: False
dayparts:
# daypart : [start_hour (inclusive), end_hour (exclusive)]
  D1: [1, 3]
  D2: [3, 5]
  D3: [5, 7]
  D4: [7, 9]
  D5: [9, 11]
  D6: [11, 13]
  D7: [13, 15]
  D8: [15, 17]
  D9: [17, 19]
  D10: [19, 21]
  D11: [21, 23]
  D12: [23, 25]
  
seasons:
# season : [month 1, month 2, ...] (all inclusive)
  S1: [1, 2, 3, 4]
  S2: [5, 6, 7, 8]
  S3: [9, 10, 11, 12]  

timeshift: 6 # value between -11 and 12
  
# Spatial Parameters 
geographic_scope:
  - "IND"
  - "BGD"
  - "BTN"
  - "NPL"      

# Set to True if transmission should be included
crossborderTrade: True

# Set to True if existing transmission capacities should be included
# from the Global Transmission Database (Brinkerink et al., 2024).
transmission_existing: True

# Set to True if planned transmission capacities should be included
# from the Global Transmission Database (Brinkerink et al., 2024).
transmission_planned: True

# Set to True if existing storage capacities should be included
# from the Global Energy Storage Database (DOE/Sandia).
# If custom nodes are defined in 'nodes_to_add' and you want to assign
# GESDB data to custom nodes you'll have to update 'GESDB_region_mapping'
# in 'resources/data/custom'.
storage_existing: True

# Set to True if planned storage capacities should be included
# from the Global Energy Storage Database (DOE/Sandia).
# If custom nodes are defined in 'nodes_to_add' and you want to assign
# GESDB data to custom nodes you'll have to update 'GESDB_region_mapping'
# in 'resources/data/custom'.
storage_planned: True

# Emission Parameters 
emission_penalty: 
# - [EMISSION, COUNTRY, START_YEAR, END_YEAR, VALUE]
# EXAMPLE:  - ["CO2", "IND", 2020, 2050, 2.1]
# where VALUE is in M$/MT CO2
 - ["CO2", "IND", 2023, 2050, 50]
 - ["CO2", "BGD", 2023, 2050, 50]
 - ["CO2", "BTN", 2023, 2050, 50]
 - ["CO2", "NPL", 2023, 2050, 50]   

# Investment Parameters 
no_invest_technologies: 
  - "CSP"
  - "WAV"
  - "OTH"
  - "WAS"
  - "COG" 
  - "GEO"
  - "BIO"
  - "PET"

# Result Parameters 
results_by_country: True

# solver parameters
solver: "cbc" # cbc, cplex, gurobi

user_defined_capacity:
# technology: [capacity, 
#              build_year, 
#              first_year_of_expansion, 
#              build_rate_per_year, 
#              capex_cost, 
#              efficiency]
# EXAMPLE:  PWRCOAINDWE01: [8, 2000, 2025, 5, 1100, 35]
# Units are in GW (capacity/build_rate_per_year), m$/GW (capex_cost), 
# % (efficiency).

user_defined_capacity_transmission:
# entry: [technology,
#         capacity, 
#         build_year, 
#         first_year_of_expansion, 
#         final_year_of_expansion,   
#         build_rate_per_year, 
#         capex_cost,
#         annual_fixed_O&M_cost,
#         variable_O&M_cost,
#         efficiency]
# EXAMPLE:  trn1: [TRNINDEAINDNE, 5, 1975, 2025, 2025, 0, 350, 13, 4, 95]
# Per technology, only the capacity, build_year, first_year_of_expansion, 
# final_year_of_expansion and build_rate_per_year parameters can deviate
# from each other. For all other parameters only the last entry will be used.

user_defined_capacity_storage:
# entry: [technology, 
#         capacity, 
#         build_year, 
#         first_year_of_expansion, 
#         build_rate_per_year, 
#         capex_cost, 
#         annual_fixed_O&M_cost, 
#         variable_O&M_cost, 
#         roundtrip_efficiency]
# EXAMPLE:  sto1: [PWRSDSINDWE01, 2, 2010, 2025, 3, 1800, 40, 0, 87]
# Per technology, only the capacity and build_year
# parameters can deviate from each other. For all other
# parameters only the last entry will be used.
# Units are in GW (capacity/build_rate_per_year), 
# m$/GW (capex_cost/annual_fixed_O&M_cost), 
# $/MWh (variable_O&M_cost), % (roundtrip_efficiency).

transmission_parameters:
# technology_group: [Line CAPEX, 
#                    Converter pair CAPEX, 
#                    Line losses, 
#                    AC/DC Converter pair losses, 
#                    Fixed O&M costs, 
#                    Variable O&M costs]
# Units are in $2020/MW/KM (Line CAPEX), $2020/MW (Converter pair CAPEX),
# %/1000km (Line losses), % (AC/DC Converter pair losses), 
# % of total CAPEX/yr (Fixed O&M costs), $/MWh (Variable O&M costs).
  HVAC: [779, 95400, 6.75, 0, 3.5, 4]
  HVDC: [238, 297509, 3.5, 1.3, 3.5, 4]
  HVDC_subsea: [295, 297509, 3.5, 1.3, 3.5, 4]

storage_parameters:
# technology_group: [capex_cost,
#                    annual_fixed_O&M_cost,
#                    variable_O&M_cost,
#                    roundtrip_efficiency,
#                    duration]
# EXAMPLE:  SDS: [1938, 44.25, 0, 85, 4] 
# Units are in m$/GW (capex_cost, annual_fixed_O&M_cost), $/MWh (variable_O&M_cost),
# % (roundtrip_efficiency), hours (duration = storage capacity (GWh)/Power rating (GW)).
  SDS: [1938, 44.25, 0, 85, 4] 
  LDS: [3794, 20.2, 0.58, 80, 10]

nodes_to_add:
# - "AAAXX" where AAA is a 3-letter country code, 
# specified in the "geographic scope" 
# and XX is a 2-letter sub-regional node code. 
# E.g. - "IDNSM" for a sub-regional node in Sumatra, Indonesia.

nodes_to_remove:
# - "AAAXX" where AAA is a 3-letter country code, and XX is a 2-letter 
# sub-national code.
# E.g. - "INDNO" for the Northern India region that is part of the default OSeMOSYS
# Global workflow.

reserve_margin:
# RESERVE_MARGIN: [PERCENTAGE, START_YEAR, END_YEAR]
# Years for which there is no PERCENTAGE value will be interpolated
# EXAMPLE:  RM1: [10, 2025, 2050]
  RM1: [15, 2030, 2050]

reserve_margin_technologies:
# TECHNOLOGY: PERCENTAGE,
# Specify the share of capacity (%) per technology that can contribute to the
# reserve margin. Technologies that are not listed are excluded from contributing.
# EXAMPLE:  CCG : 90
  BIO : 90
  CCG : 90
  COA : 90
  COG : 50
  CSP : 30
  GEO : 90
  HYD : 30
  OCG : 90
  OIL : 90
  OTH : 90
  PET : 90
  SPV : 0
  URN : 90
  WAS : 90
  WAV : 10
  WOF : 10
  WON : 10
  LDS : 70
  SDS : 70    

emission_limit:
# - [EMISSION, COUNTRY, TYPE, YEAR, VALUE]
# where VALUE is emissions in million tonnes of CO2-equivalent and YEAR is  
# when that constraint must be adhered to. All years between multiple emission 
# constraints will be interpolated if TYPE is set to "LINEAR". If "POINT" is used
# it means that a singular year value is set without interpolation occuring in
# previous target years. A combination of TYPE targets can be set per EMISSION and
# COUNTRY yet only a single target per YEAR.
# EXAMPLE: - ["CO2", "IND", "LINEAR", 2050, 0]
 - ["CO2", "IND", "LINEAR", 2050, 0]
 - ["CO2", "BGD", "LINEAR", 2050, 0]
 - ["CO2", "BTN", "LINEAR", 2050, 0]
 - ["CO2", "NPL", "LINEAR", 2050, 0] 

min_generation_factors:
# TECHNOLOGY: [VALUE, COUNTRY, YEAR]
# where VALUE is minimum utilization (PJ) of a given technology. This can be 
# used to constrain power plant output (generation), for example, to calibrate historical
# generation values.
# EXAMPLE:  OCG: [50, "IND", 2021]
  
max_availability_factors:
# [COUNTRY/NODE, TECHNOLOGY, START_YEAR, END_YEAR, VALUE]
# where VALUE is percentage (%) MAX availability of a given technology. This overwrites
# the default values from availability_factors.csv in resources/data. This parameter can
# be used to constrain the maximum output of technologies to, for example, mimic 
# max generation policy targets.
# EXAMPLE: - ["IND", 'COA', 2030, 2050, 25]
 
fossil_capacity_targets:
# [NODE, TECHNOLOGY, START_YEAR, END_YEAR, SENSE, VALUE]
# where VALUE is the absolute (GW) capacity constraint and SENSE sets the type of constraint.
# E.g. 'ABS' sets a fixed value, 'MIN' sets a minimum capacity value and 'MAX' sets a maximum
# capacity value. Note that in case 'ABS' or 'MAX' is applied, the given value needs to be 
# higher than the residual capacity of that technology in the given year otherwise the workflow
# will not complete. Targets can only be set at the nodal level.
# EXAMPLE: - ["INDNE", 'CCG', 2040, 2050, 'MIN', 10]

re_targets:
# TARGET: [COUNTRY/NODE, [TECHNOLOGY], START_YEAR, END_YEAR, VALUE]
# E.g. TO1: ["IND", [], "PCT", 2030, 2040, 60]
# E.g. TO2: ["INDSO", ['WOF', 'WON'], "PCT", 2025, 2045, 15]
# E.g. TO3: ["INDSO", ['WOF'], "ABS", 2040, 2050, 200]
# Targets can be set in absolute terms ("ABS", VALUE = GW) or in relative terms 
# ("PCT", VALUE = %) where targets in relative terms represent the share of generation.
# For "PCT", targets can be set at national (e.g. "IND") and nodal levels (e.g. "INDSO")
# whereas "ABS" can only be set at nodal levels. For "PCT", a single technology can 
# be set for the target (e.g. ["WOF"]) a technology subset can be set (e.g. ['WOF', 'WON'])
# or the TECHNOLOGY list can be left empty (e.g. []) as such that all renewable
# technologies contribute to the target. For "ABS", only one technology can be 
# selected per target. Note that a combination of targets can be set that affect
# the same countries/nodes/technologies. This can be computationally intensive.
# EXAMPLE:  T01: ["", [], "PCT", 2048, 2050, 95]
# EXAMPLE:  T02: ["IND", [], "PCT", 2030, 2040, 60]
# EXAMPLE:  T03: ["INDSO", ['WOF','WON'], "PCT", 2025, 2045, 15]
# EXAMPLE:  T04: ["INDSO", ['WOF'], "ABS", 2040, 2050, 100]
  T01: ["BGD", ['SPV', 'WOF', 'WON'], "PCT", 2030, 2050, 30]
  T02: ["INDSO", ['WON'], "ABS", 2040, 2040, 100]   